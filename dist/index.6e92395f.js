document.querySelectorAll("#coin__container"),document.querySelector("#btn__collapse"),document.querySelector("#moreinfo__button"),document.querySelector("#collapseContainer"),document.querySelectorAll("#card__header"),document.querySelector("#select__network");const e={coin:{},totalCrypto:{},resultDetails:{},search:{results:[],page:1,resultsPerPage:20}};class t{_clear(){this._parentEl.innerHTML=""}render(e,t=!0){return!e||Array.isArray(e)&&0===e.length?this.renderError():(this._data=e,this._generateMarkup(),t?void 0:markup)}renderTotalMarketCap(e){this._data=e,this._markupTotalMarketCap()}renderTotalActive(e){this._data=e,this._renderTotalActive()}renderTotalMarket(e){this._data=e,this._renderTotalMarket()}renderResultContainer(e){this._data=e,this._generateResultsContainerMarkup()}renderMainResult(e){this._data=e,this._mainResultRender()}renderPageView(e){this._data=e;const t=this._generateMarkup();this._clear(),this._parentEl.insertAdjacentHTML("afterbegin",t)}renderSpinner=function(){this._collapseContainer.insertAdjacentHTML("afterbegin",'\n      <div class="lds-dual-ring"></div>\n    ')}}class a extends t{constructor(e,t,a,n){super(),this._container=e,this._description=t,this._logo=a,this._format=n}totalCryptoHandlerRender(e){window.addEventListener("load",e)}_markupTotalMarketCap(){const e=`\n        <i class="bi bi-${this._logo}"></i>\n        <div class="crypto__text">\n        <p id="crypto__number">${numeral(this._data.totalMarketCap).format(`${this._format}`)}</p>\n        <p id="crypto__description">${this._description}</p>\n    `;document.querySelector(this._container).insertAdjacentHTML("afterbegin",e)}}const n=new a(".total__crypto","Digital Currency Market Cap.","currency-bitcoin","$ (0.00 a)");const r=new class extends a{constructor(e,t,a,n){super(e,t,a,n)}_renderTotalActive(){const e=`\n          <i class="bi bi-${this._logo}"></i>\n          <div class="crypto__text">\n          <p id="crypto__number">${numeral(this._data.activeCrypto).format(`${this._format}`)}</p>\n          <p id="crypto__description">${this._description}</p>\n      `;document.querySelector(this._container).insertAdjacentHTML("afterbegin",e)}}(".total__active","Total Active Crypto.","activity","0 a");const i=new class extends a{constructor(e,t,a,n){super(e,t,a,n)}_renderTotalMarket(){const e=`\n        <i class="bi bi-${this._logo}"></i>\n        <div class="crypto__text">\n        <p id="crypto__number">${numeral(this._data.markets).format(`${this._format}`)}</p>\n        <p id="crypto__description">${this._description}</p>\n    `;document.querySelector(this._container).insertAdjacentHTML("afterbegin",e)}}(".total__markets","Total Markets.","globe2","0 a");class s extends t{constructor(e,t){super(),this._container=e,this._description=t}topCoinsHandlerRender(e){window.addEventListener("load",e)}_generateMarkup(){const e=`\n      <p id="crypto__price">${numeral(this._data.price).format("$ 0,0[.]00")}</p>\n      <div class="top__bitcoin" id="cryptotext__container">\n      <p id="crypto__header">${this._data.name}</p>\n      <p id="crypto__acronym">${this._data.acronym}</p>\n      </div>\n      <p id="top__crypto__description">${this._description}</p>\n    `;document.querySelector(this._container).insertAdjacentHTML("beforeend",e)}}const o=new s(".top__bitcoin","Digital currency in which a record of transactions is maintained."),c=new s(".top__ethereum","Blockchain technology to create and run decentralized digital applications."),l=new s(".top__tether","Cryptocurrency that enables instant payments to anyone in the world.");var d=new class extends t{_parentEl=document.querySelector("#network__container");_networkContainer=document.querySelector("#blockchainNetworks");_selectionContainer=document.querySelector("#selection__container");_btnNetwork=document.querySelector("#btn__network");_collapseContainer=document.querySelector("#result__container");constructor(){super(),this.getNetwork()}getNetwork(){this._networkContainer.addEventListener("click",(e=>{this._selectionContainer.innerHTML=e.target.outerHTML,this._btnNetwork.classList.remove("btn_padding")}))}networkSearch(){return this._selectionContainer.firstChild.dataset.value}_clearCollapse(){this._collapseContainer.innerHTML=""}_generateResultsContainerMarkup(){console.log(this._selectionContainer.firstChild.textContent);const e=`\n    <div class="d-flex justify-content-center align-items-center py-5" id="header__container">\n    <img class="me-3" id="network__header__logo" src="/src/img/${this._selectionContainer.firstChild.textContent}.svg" alt="${this._selectionContainer.firstChild.textContent}"/>\n    <p class="text-center mb-0 text-uppercase" id="network__header">${this._data.name}</p>\n    </div>\n\n    \x3c!-- extra details --\x3e\n    <div id="extra__details container-fluid">\n      <div class="row row-cols-2 text-center text-capitalize">\n        <div class="col text-end" id="volume__24h">\n          <p>volume 24h:</p>\n          <p>${numeral(this._data.volume).format("$ (0.00 a)")}</p>\n        </div>\n        <div class="col text-start" id="market__cap">\n          <p>market cap:</p>\n          <p>${numeral(this._data.marketcap).format("$ (0.00 a)")}</p>\n        </div>\n      </div>\n      <div class="row row-cols-1">\n        <div class="col">\n          <p id="extra__description">\n           ${null==this._data.description?"":this._data.description}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div id="mainresult__container">\n      <div class="row d-flex p-0">\n        <div id="coin__container" class="col-1 p-0">\n          <p id="coin__number" class="mb-0 text-center">#</p>\n          <ul class="list-unstyled" id="result__number"></ul>\n        </div>\n        <div id="coin__container" class="col-5 col-sm-4 col-lg-3 p-0">\n          <p id="coin__name" class="mb-0 text-center">Coin:</p>\n          \x3c!-- THIS IS FOR THE NAME OF COIN --\x3e\n          <ul class="list-unstyled" id="result__name__list"></ul>\n        </div>\n        <div id="coin__container" class="col-6 col-sm-7 col-lg-8 overflow-auto p-0">\n          \x3c!-- Header  and Result --\x3e\n          <ul class="list-unstyled d-flex text-center">\n            \x3c!-- Price List --\x3e\n            <li class="col-12 col-sm-6 col-md-5 col-lg-3">\n              \x3c!-- Price Header --\x3e\n              <p id="coin__price__header">Price</p>\n              <ul id="price__list"></ul>\n            </li>\n            \x3c!-- Volume List --\x3e\n            <li class="col-12 col-sm-6 col-md-5 col-lg-3">\n              <p id="coin__volume__header">Volume</p>\n              <ul id="volume__list"></ul>\n            </li>\n            <li class="col-12 col-sm-6 col-md-5 col-lg-3">\n              <p id="coin__marketcap__header">Mkt Cap</p>\n              <ul id="marketcap__list"></ul>\n            </li>\n            <li class="col-12 col-sm-6 col-md-5 col-lg-3">\n              <p id="coin__moreinformation__header">More Info.</p>\n              <ul id="moreinfo__list"></ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    `;this._clearCollapse(),document.querySelector("#result__container").insertAdjacentHTML("afterbegin",e)}addHandlerNetwork(e){this._parentEl.addEventListener("submit",(function(t){t.preventDefault(),e()}))}};class _ extends t{constructor(e){super(),this._container=e}_mainResultRender(){const e=this._data.map(this._generateMarkup).join("");document.querySelector(this._container).insertAdjacentHTML("afterbegin",e)}_clear(){this._container.innerHTML=""}_generateMarkup(e){return`\n    <li id="name__item">\n      <img id="result__logo" src="${e.image}" alt="${e.image}" />\n      <p class="col-10" id="result__name">${e.name.split(" ").slice(0,2).join(" ")}</p>\n    </li>\n    `}mainResultHandlerRender(e){window.addEventListener("load",e)}}const p=new _("#result__name__list");const u=new class extends _{constructor(e){super(e)}_mainResultRender(){for(let e=1;e<=this._data.length;e++){const t=`\n      <li id="number__item">\n        <p class="mb-0 text-center">${e}</p>\n      </li>\n      `;document.querySelector(this._container).insertAdjacentHTML("beforeend",t)}}}("#result__number");const m=new class extends _{constructor(e){super(e)}_generateMarkup(e){return`\n    <li class="col-5" id="price__item">\n      <p id="price__content">${numeral(e.price).format("($ 0.00 a)")}</p>\n    </li>\n    `}}("#price__list");const h=new class extends _{constructor(e){super(e)}_generateMarkup(e){return`\n    <li class="col-5" id="volume__item">\n      <p id="volume__content">${numeral(e.volume).format("($ 0.00 a)")}</p>\n    </li>\n    `}}("#volume__list");const g=new class extends _{constructor(e){super(e)}_generateMarkup(e){return`\n    <li class="col-5" id="marketcap__item">\n      <p id="marketcap__content">${numeral(e.marketcap).format("($ 0.00 a)")}</p>\n    </li>\n    `}}("#marketcap__list");const k=new class extends _{constructor(e){super(e)}_generateMarkup(){return'\n    <li class="col-5" id="moreinfo__item">\n      <button id="moreinfo__button" data-toggle="collapse" data-target="#collapseContainer"> View more </button>\n    </li>\n    '}}("#moreinfo__list");var f=new class extends t{_parentEl=document.querySelector(".pagination");addHandlerClick(e){this._parentEl.addEventListener("click",(function(t){t.preventDefault();const a=t.target.closest(".page-item");if(!a)return;const n=+a.dataset.goto;e(n)}))}_generateMarkup(){const e=Math.ceil(this._data.results.length/this._data.resultsPerPage),t=this._data.page;return 1===t&&e>1?`\n      <li data-goto="${t}" class="page-item"> <a class="page-link" href="#">${t}</a></li>\n      <li data-goto="${t+1}" class="page-item"> <a class="page-link" href="#">${t+1}</a></li>\n      <li data-goto="${t+2}" class="page-item"><a class="page-link" href="#">${t+2}</a></li>\n      <li data-goto="${t+3}" class="page-item"><a class="page-link" href="#">${t+3}</a></li>\n      <li data-goto="${t+1}" class="page-item"><a class="page-link" href="#">Next</a></li>\n    `:t===e&&e>1?`\n      <li  data-goto="${t-1}" class="page-item"><a class="page-link" href="#">Previous</a></li>\n      <li  data-goto="${t-3}" class="page-item"><a class="page-link" href="#">${t-3}</a></li>\n      <li  data-goto="${t-2}" class="page-item"><a class="page-link" href="#">${t-2}</a></li>\n      <li  data-goto="${t-1}" class="page-item"><a class="page-link" href="#">${t-1}</a></li>\n    `:2===t?`\n    <li data-goto="${t-1}" class="page-item"> <a class="page-link" href="#">${t-1}</a></li>\n    <li data-goto="${t}" class="page-item"> <a class="page-link" href="#">${t}</a></li>\n    <li data-goto="${t+1}" class="page-item"><a class="page-link" href="#">${t+1}</a></li>\n    <li data-goto="${t+2}" class="page-item"><a class="page-link" href="#">${t+2}</a></li>\n    <li data-goto="${t+1}" class="page-item"><a class="page-link" href="#">Next</a></li>\n    `:t<e?`\n      <li data-goto="${t-2}"class="page-item"><a class="page-link" href="#">Previous</a></li>\n      <li data-goto="${t-1}"class="page-item"><a class="page-link" href="#">${t-1}</a></li>\n      <li data-goto="${t}"    class="page-item"><a class="page-link" href="#">${t}</a></li>\n      <li data-goto="${t+1}"class="page-item"><a class="page-link" href="#">${t+1}</a></li>\n      <li data-goto="${t+1}"class="page-item"><a class="page-link" href="#">Next</a></li>\n    `:""}};const y=async function(t,a){try{await async function(t){try{const a=await fetch(`https://api.coingecko.com/api/v3/coins/${t}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`);if(!a.ok)throw new Error(`${n} (${a.status})`);const n=await a.json();e.coin={name:n.name,acronym:n.symbol,price:n.market_data.current_price.usd}}catch(e){console.error(`${e}⚠`)}}(t),a.render(e.coin)}catch(e){console.error(e)}},v=async function(t){try{e.search.results=[];const a=d.networkSearch();if(!a)return;await async function(t){try{const a=await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&category=${t}&order=id_asc&per_page=1&sparkline=false`),n=await a.json(),[]=n.map((t=>e.search.results.push({name:t.name,id:t.id,volume:t.total_volume,marketcap:t.market_cap,price:t.current_price,image:t.image,symbol:t.symbol})))}catch(e){console.error(e)}}(a);const n=function(t=e.search.page){e.search.page=t;const a=(t-1)*e.search.resultsPerPage,n=t*e.search.resultsPerPage;return e.search.results.slice(a,n)}(t);(await async function(){try{const e=await fetch("https://api.coingecko.com/api/v3/coins/categories?order=name_asc");return await e.json()}catch(e){console.error(e)}}()).map((t=>{console.log(t),t.id==a&&(e.resultDetails={id:t.id,name:t.name,description:t.content,marketcap:t.market_cap,volume:t.volume_24h})}));const r=e.resultDetails;d.renderResultContainer(r),u.renderMainResult(n),p.renderMainResult(n),m.renderMainResult(n),h.renderMainResult(n),g.renderMainResult(n),k.renderMainResult(n),f.renderPageView(e.search)}catch(e){console.error(e)}};(async function(t,a,n){try{await async function(t){try{const a=await fetch(`${t}`),n=await a.json();e.totalCrypto={totalMarketCap:n.data.total_market_cap.usd,markets:n.data.markets,activeCrypto:n.data.active_cryptocurrencies}}catch(e){console.error(e)}}("https://api.coingecko.com/api/v3/global"),t.renderTotalMarketCap(e.totalCrypto),a.renderTotalActive(e.totalCrypto),n.renderTotalMarket(e.totalCrypto)}catch(e){console.error(e)}})(n,r,i),d.addHandlerNetwork(v),o.topCoinsHandlerRender(y("bitcoin",o)),c.topCoinsHandlerRender(y("ethereum",c)),l.topCoinsHandlerRender(y("tether",l)),f.addHandlerClick(v);
//# sourceMappingURL=index.6e92395f.js.map
